{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "UniversityDB": "Server=localhost\\SQLEXPRESS;Database=UniversityDB;Trusted_Connection=True;"
  },

  "JsonWebTokenKeys": {

    "ValidateIssuerSigningKey": true,
    "IssuerSigningKey": "66A63153-11C1-4919-9133-EFAF99A98456",
    "ValidateIssuer": true,
    "ValidIssuer": "https://localhost:7255",
    "ValidateAudience": true,
    "ValidAudience": "https://localhost:7255",
    "RequireExpirationTime": true,
    "ValidateLifetime": true
  },


  "Serilog": {
    "MinimunLevel": //El nivel mínimo de log
    {
      "Default": "Verbose", //Cuanto más explicito mejor, que tenga más información
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.LifeTime": "Information"
      }
    },
    "WriteTo": [
      { //Escribimos en archivo
        "Name": "File",
        "Args": //Nos va a permitir decir donde almacenarlos
        {
          "path": "./logs/log-.txt",
          "rollingInterval": "Day" //Para que el remplazo de estos archivos sea diario y con notación diaria
        }
      },

      { //Escribimos en nuestra base de datos. Almacenamos los log en base de datos
        "Name": "MSSqlServer",
        "Args": 
        {
          "connectionString": "UniversityDB", //Nombre de nuestra conexion
          "sinkOptionsSection": 
          {
            "tableName": "Logs", //Nombre de la base de datos
            "schemaName": "EventLogging", //Esquema que será un event logging
            "autoCreateSqlTable": true, //Si la tabla no existe que la cree
            "batchPostingLimit": 1000, //Límites de subidas que se pueden hacer (bash)
            "period": "0.00:00:30"
          },
          "restrictedToMinumumLevel": "Verbose" //De esta forma en la bd solo vamos a persistir eventos muy importantes
        }
      }
    ]
  
  }

}
